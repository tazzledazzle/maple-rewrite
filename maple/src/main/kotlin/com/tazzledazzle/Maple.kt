/*
 * This source file was generated by the Gradle 'init' task
 */
package com.tazzledazzle

import com.xenomachina.argparser.ArgParser
import com.xenomachina.argparser.default

class Maple {
    val greeting: String
        get() {
            return "Hello World!"
        }
    fun main(args: Array<String>) {
        if (args.isNotEmpty()) {
            println("Command line arguments: ${args.joinToString(", ")}")
        } else {
            println("No command line arguments provided.")
        }
        ArgParser(args).parseInto(::MapleArgs).run {
            println("Bom file: $bom")
            println("Version flag is set: $version")
            if (!liveRun) {
                runMaple(args)
            }
        }
    }
}
class MapleArgs(parser: ArgParser) {
    val bom by parser.storing(  "-b","--bom", help = "The bom file used")
    val version by parser.storing( "-v","--ver", help = "Show version")
    val liveRun by parser.flagging( "-e","--execute", help = "Default to false, set to true to run Maple in live mode").default(false)
}

fun runMaple(args: Array<String>) {
    println("Running Maple with arguments: ${args.joinToString(", ")}")
    // Add your Maple logic here
}
